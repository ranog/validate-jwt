name: CI Pipeline

on:
  push:
    branches:
      - dev
      - main
  pull_request:
    branches:
      - dev
      - main
  workflow_call:
    inputs:
      python-version:
        description: 'Python version to use'
        required: false
        default: '3.12'
        type: string

permissions:
  contents: read
  pull-requests: write

jobs:
  dependencies:
    name: Install Dependencies
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ inputs.python-version || '3.12' }}

      - name: Install Poetry
        run: |
          pip install poetry
          poetry config virtualenvs.create false
          poetry install

      - name: Export requirements.txt
        run: poetry export --without-hashes --format=requirements.txt --output=requirements.txt

      - uses: actions/upload-artifact@v4
        with:
          name: requirements.txt
          path: requirements.txt

  qa:
    name: Code Quality
    runs-on: ubuntu-latest
    needs: dependencies

    steps:
      - uses: actions/checkout@v3

      - name: Install tools
        run: pip install ruff black

      - name: Lint with Ruff
        run: ruff check .

      - name: Check formatting with Black
        run: black --check src/ tests/

  tests:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: dependencies

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ inputs.python-version || '3.12' }}

      - name: Install Poetry and deps
        run: |
          pip install poetry
          poetry config virtualenvs.create false
          poetry install

      - name: Run tests with coverage
        run: |
          pytest --cov=src tests/ --cov-fail-under=90

