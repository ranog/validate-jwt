name: Deploy PROD

on:
  push:
    branches:
      - master

env:
  ECS_CLUSTER_NAME: validate-jwt-prod-service
  ECS_SERVICE_NAME: validate-jwt-prod
  ECS_TASK_DEFINITION: ecs-task-definition.json
  CONTAINER_NAME: validate-jwt
  IMAGE_REPO_NAME: validate-jwt
  ECR_REGISTRY: 231711413035.dkr.ecr.us-west-2.amazonaws.com

jobs:
  deploy:
    name: Deploy to PROD
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push Docker image to Amazon ECR
        run: |
          docker build -t $ECR_REGISTRY/$IMAGE_REPO_NAME:$GITHUB_SHA .
          docker push $ECR_REGISTRY/$IMAGE_REPO_NAME:$GITHUB_SHA

      - name: Fill in the new image ID in the task definition
        run: |
          sed -i "s|<IMAGE>|$ECR_REGISTRY/$IMAGE_REPO_NAME:$GITHUB_SHA|g" $ECS_TASK_DEFINITION

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ env.ECS_TASK_DEFINITION }}
          service: ${{ env.ECS_SERVICE_NAME }}
          cluster: ${{ env.ECS_CLUSTER_NAME }}
          wait-for-service-stability: true
